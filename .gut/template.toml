# This template merge config file lists:
# - patterns: strings to do text substitution on
# - rev_id: a sequential revision id of the template repo (manually maintained for now)
# - required: a full list of all files always merged
# - optional: a full list of all files merged when the --optional flag is used with `gut template`
name = "Language Template"
patterns = ["__UND__", "__UND2C__", "__UNDEFINED__", "__LICENSE__", "__REPO__"]
rev_id = 211
required = [".gitattributes",
            ".gitignore",
            ".github/workflows/docsygen.yml",
            ".github/workflows/zulip.yml",
            "Makefile.am",
            "autogen.sh",
            "configure.ac",
            "devtools/check_analysis_regressions.sh.in",
            "devtools/generate-adj-wordforms.sh",
            "devtools/generate-noun-wordforms.sh",
            "devtools/generate-prop-wordforms.sh",
            "devtools/generate-verb-wordforms.sh",
            "devtools/test_grammar_checker.sh.in",
            "devtools/test_ospell-office_suggestions.sh.in",
            "devtools/test_voikkospell_suggestions.sh.in",
            "docs/Makefile.am",
            "docs/_config.yml",
            "docs/_includes/toc.html",
            "docs/_layouts/default.html",
            "docs/assets/css/style.scss",
            "giella-__UND__.pc.in",
            "m4/ax_check_gnu_make.m4",
            "m4/ax_compare_version.m4",
            "m4/ax_java_modules.m4",
            "m4/ax_python_module.m4",
            "m4/giella-config-files.m4",
            "m4/giella-macros.m4",
            "m4/hfst.m4",
            "src/Makefile.am",
            "src/cg3/Makefile.am",
            "src/fst/Makefile.am",
            "src/fst/filters/.gitignore",
            "src/fst/filters/Makefile.am",
            "src/fst/.gitignore",
            "src/fst/morphology/Makefile.am",
            "src/fst/morphology/Makefile.modifications-phon.am",
            "src/fst/hyphenation/Makefile.am",
            "src/fst/orthography/Makefile.am",
            "src/fst/phonetics/Makefile.am",
            "src/fst/phonetics/tests/Makefile.am",
            "src/fst/phonetics/tests/run_tests.sh.in",
            "src/fst/tagsets/Makefile.am",
            "src/fst/transcriptions/Makefile.am",
            "test/Makefile.am",
            "test/check_lemmas.sh",
            "test/error-handling-stubs.sh",
            "test/run-morph-tester.sh.in",
            "test/run-yaml-testcases.sh.in",
            "src/fst/test/Makefile.am",
            "src/fst/morphology/test/Makefile.am",
            "src/fst/morphology/test/generate-adjective-lemmas.sh.in",
            "src/fst/morphology/test/generate-noun-lemmas.sh.in",
            "src/fst/morphology/test/generate-propernoun-lemmas.sh.in",
            "src/fst/morphology/test/generate-verb-lemmas.sh.in",
            "src/fst/morphology/test/missing-multichars.sh.in",
            "src/fst/orthography/test/Makefile.am",
            "src/fst/orthography/test/run-initcaps-genyaml-testcases.sh",
            "src/fst/morphology/test/phonology/Makefile.am",
            "src/fst/morphology/test/phonology/pair-test-hfst.sh.in",
            "src/fst/morphology/test/phonology/pair-test-negative.sh.in",
            "src/fst/morphology/test/phonology/pair-test-positive.sh.in",
            "src/fst/test/run-dict-gt-desc-anayaml-testcases.sh",
            "src/fst/test/run-dict-gt-norm-genyaml-testcases.sh",
            "src/fst/test/run-gt-desc-anayaml-testcases.sh",
            "src/fst/test/run-gt-desc-genyaml-testcases.sh",
            "src/fst/test/run-gt-desc-yaml-testcases.sh",
            "src/fst/test/run-gt-norm-anayaml-testcases.sh",
            "src/fst/test/run-gt-norm-genyaml-testcases.sh",
            "src/fst/test/run-gt-norm-yaml-testcases.sh",
            "src/fst/test/run-lexc-testcases.sh",
            "src/cg3/test/Makefile.am",
            "tools/hyphenators/test/Makefile.am",
            "tools/hyphenators/test/fstbased/Makefile.am",
            "tools/hyphenators/test/patternbased/Makefile.am",
            "tools/mt/apertium/test/Makefile.am",
            "tools/mt/apertium/test/run-mt-gt-desc-anayaml-testcases.sh",
            "tools/spellcheckers/test/Makefile.am",
            "tools/spellcheckers/test/fstbased/Makefile.am",
            "tools/spellcheckers/test/fstbased/desktop/Makefile.am",
            "tools/spellcheckers/test/fstbased/desktop/hfst/Makefile.am",
            "tools/spellcheckers/test/fstbased/desktop/hfst/accept-all-lemmas.sh.in",
            "tools/spellcheckers/test/fstbased/desktop/hfst/run-acceptor-yaml-testcases.sh",
            "tools/spellcheckers/test/fstbased/desktop/hfst/test-zhfst-basic-sugg-speed.sh.in",
            "tools/spellcheckers/test/fstbased/mobile/Makefile.am",
            "tools/spellcheckers/test/fstbased/run-fstspeller-gt-norm-yaml-testcases.sh",
            "tools/spellcheckers/test/neural/Makefile.am",
            "tools/spellcheckers/test/run-spellers-gt-norm-yaml-testcases.sh",
            "tools/spellcheckers/test/suggestion-quality.sh.in",
            "tools/spellcheckers/test/test-zhfst-file.sh.in",
            "tools/Makefile.am",
            "tools/analysers/Makefile.am",
            "tools/grammarcheckers/Makefile.am",
            "tools/grammarcheckers/filters/Makefile.am",
            "tools/grammarcheckers/tests/Makefile.am",
            "tools/hyphenators/Makefile.am",
            "tools/hyphenators/Makefile.modification-fst.am",
            "tools/hyphenators/Makefile.modification-pattern.am",
            "tools/hyphenators/filters/Makefile.am",
            "tools/mt/Makefile.am",
            "tools/mt/Makefile.modifications.am",
            "tools/mt/apertium/Makefile.am",
            "tools/mt/apertium/Makefile.modifications.am",
            "tools/mt/apertium/filters/Makefile.am",
            "tools/mt/apertium/tagsets/Makefile.am",
            "tools/mt/cgbased/Makefile.am",
            "tools/mt/filters/Makefile.am",
            "tools/shellscripts/Makefile.am",
            "tools/shellscripts/u__UND__-gt.sh.in",
            "tools/spellcheckers/Makefile.am",
            "tools/spellcheckers/Makefile.mod-desktop-hfst.am",
            "tools/spellcheckers/Makefile.mod-desktop.am",
            "tools/spellcheckers/Makefile.mod-fstbased.am",
            "tools/spellcheckers/Makefile.mod-mobile-hfst.am",
            "tools/spellcheckers/Makefile.mod-mobile.am",
            "tools/spellcheckers/Makefile.mod-spellcheckers.am",
            "tools/spellcheckers/filters/Makefile.am",
            "tools/spellcheckers/filters/Makefile.mod-desktop-filters.am",
            "tools/spellcheckers/filters/Makefile.mod-fstbased-filters.am",
            "tools/spellcheckers/filters/Makefile.mod-mobile-filters.am",
            "tools/spellcheckers/weights/Makefile.am",
            "tools/tokenisers/Makefile.am",
            "tools/tokenisers/filters/Makefile.am",
            "tools/tokenisers/tests/Makefile.am",
            "tools/tts/Makefile.am",
            "tools/tts/test/Makefile.am"]

optional = [".build-config.yml",
            ".taskcluster.yml",
            "AUTHORS",
            "INSTALL",
            "LICENSE",
            "README.md",
            "CITATION.cff",
            "devtools/00README.txt",
            "docs/index-header.md",
            "manifest.toml.in",
            "src/fst/generated_files/00README.txt",
            "src/fst/incoming/00README.txt",
            "tools/analysers/pipespec.xml.in",
            "tools/grammarcheckers/index.xml",
            "tools/grammarcheckers/pipespec.xml.in",
            "tools/mt/apertium/tagsets/README.txt",
            "tools/spellcheckers/index.mobile.xml.in",
            "tools/spellcheckers/index.xml.in",
            "tools/spellcheckers/weights/00README.txt",
            "tools/tokenisers/tokeniser-disamb-gt-desc.pmscript",
            "tools/tokenisers/tokeniser-gramcheck-gt-desc.pmscript",
            "tools/tokenisers/tokeniser-tts-cggt-desc.pmscript",
            "tools/tts/pipespec.xml.in"]

ignored = [ "manifest.toml",
            "misc/00Readme.txt",
            "src/cg3/dependency.cg3",
            "src/cg3/disambiguator.cg3",
            "src/cg3/functions.cg3",
            "src/filters/downcase_UCletters.regex",
            "src/filters/remove-derivation-position-tags.regex",
            "src/filters/remove-DNorm-tags.regex",
            "src/filters/remove-norm-comp-tags.regex",
            "src/filters/rename-POS_before_Der-tags.regex",
            "src/fst/affixes/adjectives.lexc",
            "src/fst/affixes/nouns.lexc",
            "src/fst/affixes/propernouns.lexc",
            "src/fst/affixes/symbols.lexc",
            "src/fst/affixes/verbs.lexc",
            "src/fst/phonology.twolc",
            "src/fst/root.lexc",
            "src/fst/stems/adjectives.lexc",
            "src/fst/stems/nouns.lexc",
            "src/fst/stems/numerals.lexc",
            "src/fst/stems/prefixes.lexc",
            "src/fst/stems/pronouns.lexc",
            "src/fst/stems/verbs.lexc",
            "src/hyphenation/hyphenation.xfscript",
            "src/orthography/allcaps.xfscript",
            "src/orthography/downcase-derived_proper-strings.xfscript",
            "src/orthography/inituppercase.regex",
            "src/orthography/spellrelax-mobile-keyboard.regex",
            "src/orthography/spellrelax-tags.regex",
            "src/orthography/spellrelax-with-tags.xfscript",
            "src/orthography/spellrelax.regex",
            "src/phonetics/txt2ipa.xfscript",
            "src/transcriptions/transcriptor-abbrevs2text.lexc",
            "src/transcriptions/transcriptor-emoji2text.lexc",
            "src/transcriptions/transcriptor-clock-digit2text.lexc",
            "src/transcriptions/transcriptor-date-digit2text.lexc",
            "src/transcriptions/transcriptor-numbers-digit2text.lexc",
            "test/data/analysis_check_corpus.txt",
            "test/data/typos.txt",
            "test/src/dict-gt-yamls/dicttests_dict-gt-desc.ana.yaml",
            "test/src/dict-gt-yamls/dicttests_dict-gt-norm.gen.yaml",
            "test/src/orthography/initcaptests_inituppercase.gen.yaml",
            "test/tools/mt/apertium/apertiumtests_mt-gt-desc.ana.yaml",
            "test/tools/spellcheckers/fstbased/desktop/hfst/hfst-acceptor-yamls/words_acceptor.default.speller.yaml",
            "test/tools/spellcheckers/fstbased/fstspeller-gt-norm-yamls/spellertests_fstspeller-gt-norm.yaml",
            "test/tools/spellcheckers/speller-gt-norm-yamls/basespellertests_speller-gt-norm.yaml",
            "tools/analysers/analyser-gt-whitespace.regex",
            "tools/grammarcheckers/analyser-gt-whitespace.regex",
            "tools/grammarcheckers/errors.source.xml",
            "tools/grammarcheckers/grammarchecker.cg3",
            "tools/grammarcheckers/spellchecker.cg3",
            "tools/hyphenators/__UND2C__.tra",
            "tools/hyphenators/tags.reweight",
            "tools/mt/apertium/filters/00README.txt",
            "tools/mt/apertium/tagsets/README.txt",
            "tools/mt/apertium/tagsets/apertium.postproc.relabel",
            "tools/mt/apertium/tagsets/gt2apertium.cg3relabel",
            "tools/spellcheckers/editdist.default.txt",
            "tools/spellcheckers/errmodel.ocr.regex",
            "tools/spellcheckers/final_strings.default.regex",
            "tools/spellcheckers/final_strings.default.txt",
            "tools/spellcheckers/initial_letters.default.regex",
            "tools/spellcheckers/initial_letters.default.txt",
            "tools/spellcheckers/strings.default.regex",
            "tools/spellcheckers/strings.default.txt",
            "tools/spellcheckers/weights/00README.txt",
            "tools/spellcheckers/weights/spellercorpus.raw.txt",
            "tools/spellcheckers/weights/tags.reweight",
            "tools/spellcheckers/weights/word-boundary.att",
            "tools/spellcheckers/weights/word-boundary.relabel",
            "tools/spellcheckers/weights/word-boundary.txt",
            "tools/spellcheckers/words.default.txt",
            "tools/tokenisers/corpustags.txt",
            "tools/tokenisers/mwe-dis.cg3",
            "tools/tokenisers/paradigm.abbr.txt",
            "tools/tts/analyser-gt-whitespace.regex"]
